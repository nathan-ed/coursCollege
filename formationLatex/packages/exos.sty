% author : sylcha
% licence : Creative Commons Attribution-NonCommercial-ShareAlike 4.0
%           https://creativecommons.org/licenses/by-nc-sa/4.0/legalcode
% purpose : définition des environnements pour les exercices et leurs solutions
\NeedsTeXFormat{LaTeX2e}%
\ProvidesPackage{exos}[2024/08/13 v0.1]%
\RequirePackage{xparse}%
\RequirePackage[verbose]{xsim}%
\RequirePackage{xstring,xifthen}%
\DeclareExerciseTagging{difficulty}%
\DeclareExerciseType{exocours}{%
  exercise-env      = exo,%
  solution-env      = sol,%
  exercise-name     = exercice,%
  exercises-name    = exercices,%
  solution-name     = solution de l'exercice,%
  solutions-name    = solutions,%
  exercise-template = default,%
  solution-template = default,%
  exercise-heading  = \subsection*,%
  solution-heading  = \subsection*%
}%
\newtest{\DiffSuperieureAUn}[1]{%
  \cnttest{#1}>{1}%
}
\DeclareExerciseEnvironmentTemplate{worksheet}
{%
  \begin{tcolorbox}[
      enhanced jigsaw,%
      width = \columnwidth ,
      colbacktitle = \IfInsideSolutionTF{colorTer}{colorPrim} ,
      coltitle = white ,
      attach boxed title to top left=
        {yshift=-2mm},
      boxed title style={sharp corners,colback=\IfInsideSolutionTF{colorTer}{colorPrim},boxrule=0pt,opacityframe=0},
      sharp corners,
      % boxrule=1pt,
      opacityback=0,
      frame hidden,
      borderline west={1pt}{0pt}{\IfInsideSolutionTF{colorTer}{colorPrim}},
      % colframe=\IfInsideSolutionTF{colorTer}{colorPrim},
      % toprule=0pt,
      % bottomrule=0pt,
      % rightrule=0pt,
      % leftrule=1pt,
      breakable,
      title = {\bfseries\XSIMmixedcase{\GetExerciseName}~\GetExerciseProperty{counter}},
      underlay unbroken and last={%
          \draw [\IfInsideSolutionTF{colorTer}{colorPrim},line width=1pt](frame.south west) -- ++(1cm,0) node[font=\ttfamily\tiny,text=gray,right=1mm,inner sep=0pt,anchor=south west,yshift=-2pt] {\GetExerciseProperty{source}};
        },
      overlay unbroken and first={%
      \IfInsideSolutionF{
        \IfExercisePropertySetT{difficulty}{%
            \ifthenelse{\DiffSuperieureAUn{\GetExerciseProperty{difficulty}}}%
            {%
              \coordinate (a0) at (title.east);%
              \foreach \x [remember=\x as \lastx (initially 0)] in {2,...,\GetExerciseProperty{difficulty}}%
              \node[anchor=west,right=1mm of a\lastx,inner sep=0pt,text=colorPrim] (a\x) {\faPepperHot};%
            }{}%
          }%
        \IfExercisePropertySetT{points}{%
          \coordinate (a) at (title.west);%
          \node[anchor=east,left=1mm of a.west,inner sep=0pt,text=colorPrim] (B) {\lightfont\footnotesize\GetExerciseProperty{points}~pts};
        }
      }},
      boxsep=7pt,left=0pt,right=0pt,top=5pt,bottom=0pt,
      before skip=20pt plus 2pt,after skip=20pt plus 2pt
    ]
    }
    {\end{tcolorbox}}
\DeclareExerciseParameter*{exercise-short}
\SetExerciseParameter{exofiche}{exercise-short}{Ex}
\DeclareExerciseParameter*{solution-short}
\SetExerciseParameter{exofiche}{solution-short}{Sol}
\DeclareExerciseType{exofiche}{%
  exercise-env      = exof,%
  solution-env      = solf,%
  exercise-name     = exercice,%
  exercises-name    = exercices,%
  solution-name     = solution de l'exercice,%
  solutions-name    = solutions,%
  exercise-template = worksheet,%
  solution-template = worksheet,%
  exercise-short    = ex,%
  solution-short    = sol,%
}%
% commande pour insérer des exercices
\NewDocumentCommand{\inputexo}{ m } {%
\begin{exo}
    \input{#1}
  \end{exo}
  \IfFileExists{#1-sol}{
    \begin{sol}
      \input{#1-sol}
    \end{sol}
  }{}
}
\DeclareExerciseProperty{source}
\newcommand\SetSource[1]{\SetExerciseProperty{source}{#1}}
\newcommand{\TheSource}{}
\DeclareExerciseProperty{difficulty}
\newcommand\SetDifficulty[1]{\SetExerciseProperty{difficulty}{#1}}
\newcommand{\TheDifficulty}{}
\newcommand\SetPoints[1]{\SetExerciseProperty{points}{#1}} % propriété points est déjà défini
\newcommand{\ThePoints}{}
\NewDocumentCommand{\inputexofiche}{ m } {%
\renewcommand{\TheSource}{\FindSource{#1}}
\renewcommand{\TheDifficulty}{\FindDifficulty{#1}}
\renewcommand{\ThePoints}{\FindPoints{#1}}
  \begin{exof}[points=\ThePoints]
    \IfStrEq{\TheSource}{}{}{\SetSource{\TheSource}} % on établit la propriété source que si elle existe.
    \IfStrEq{\TheDifficulty}{}{}{\SetDifficulty{\TheDifficulty}} % on établit la propriété difficulty que si elle existe.
    % \IfStrEq{\ThePoints}{}{}{\SetPoints{\ThePoints}} % on établit la propriété points que si elle existe.
    \input{#1}
  \end{exof}
  \IfFileExists{#1-sol.tex}{
    \begin{solf}
    \input{#1-sol}
  \end{solf}
  }{\wlog{#1-sol.tex not found! No solution produced.}}
}
% test python
\RequirePackage{pyluatex}
\begin{python}
  def findsource(f):
    with open(f+".tex","r") as fi:
      id = []
      for ln in fi:
        if ln.startswith("% @Source"):
          id.append(ln[2:])
    if len(id) != 0:
      return id[0].split("@Source ",2)[1]
    else:
      return ''

  def finddifficulty(f):
    with open(f+".tex","r") as fi:
      id = []
      for ln in fi:
        if ln.startswith("% @Difficulté"):
          id.append(ln[2:])
    if len(id) != 0:
      return id[0].split("@Difficulté ",2)[1][0]
    else:
      return ''

  def findpoints(f):
    with open(f+".tex","r") as fi:
      id = []
      for ln in fi:
        if ln.startswith("% @Points"):
          id.append(ln[2:])
    if len(id) != 0:
      return id[0].split("@Points ",2)[1]
    else:
      return ''

  def findurl(f):
    with open(f+".tex","r") as fi:
      id = []
      for ln in fi:
        if ln.startswith("% @Url"):
          id.append(ln[2:])
    if len(id) != 0:
      return id[0].split("@Url ",2)[1]
    else:
      return ''
\end{python}

\newcommand{\FindSource}[1]{\pyc{print(findsource("#1"))}}
\newcommand{\FindDifficulty}[1]{\pyc{print(finddifficulty("#1"))}}
\newcommand{\FindUrl}[1]{\pyc{print(findurl("#1"))}}
\newcommand{\FindPoints}[1]{\pyc{print(findpoints("#1"))}}
% grading table template
\DeclareExerciseTableTemplate{colonne}{%
  \XSIMputright\ExerciseTableCode{%
    \toprule
      \XSIMifblankF{\ExerciseType}{\XSIMmixedcase{\GetExerciseParameter{exercise-name}}} &
      \XSIMmixedcase{\XSIMtranslate{points}} &
      \XSIMtranslate{reached} \\
    \midrule
  }%
  \ForEachUsedExerciseByOrder{%
    \XSIMifeqT{#1}{\ExerciseTableType{#1}}{%
      \XSIMifblankT{\ExerciseTableType{}}{%
        \XSIMputright\ExerciseTableCode{%
	  \XSIMmixedcase{\ExerciseParameterGet{#1}{exercise-name} }%
	}%
      }%
      \XSIMputright\ExerciseTableCode{
        #3 & \XSIMifblankTF{#5}{\printgoal{0}}{\printgoal{#5}} & \\
      }%
    }%
  }%
  \XSIMputright\ExerciseTableCode{%
    \midrule
      \XSIMtranslate{total} &
      \XSIMifblankTF{\ExerciseType}
        {\TotalExerciseGoal{points}{}{}}
        {\TotalExerciseTypeGoal{\ExerciseType}{points}{}{}} &
    \\ \bottomrule
  }
  \XSIMexpandcode{%
    \noexpand\begin{tabular}{\XSIMifblankTF{\ExerciseType}{l}{c}cc}
    \noexpand\ExerciseTableCode
    \noexpand\end{tabular}
  }%
}
\DeclareExerciseTableTemplate{ligne}{%
    \XSIMputright \ExerciseTableCode{%
        \XSIMifblankF{\ExerciseType}
        {\XSIMmixedcase{\GetExerciseParameter{exercise-name}}} &
     }
    \ForEachUsedExerciseByOrder{%
        \XSIMifeqT{#1}{\ExerciseTableType{#1}}{%
            \XSIMifblankT{\ExerciseTableType{}}{%
                \XSIMputright \ExerciseTableCode{%
                    \XSIMmixedcase
                    {\ExerciseParameterGet{#1}{exercise-short}~}
                 }
             }
            \XSIMputright \ExerciseTableCode{#3 &}
         }
     }
    \XSIMputright \ExerciseTableCode{%
        Total \\
        \midrule \XSIMmixedcase{\XSIMtranslate{points}} &
     }
    \ForEachUsedExerciseByOrder{%
        \XSIMifeqT{#1}{\ExerciseTableType{#1}}{%
            \XSIMputright \ExerciseTableCode
            {\XSIMifblankTF{#5}{\printgoal{0}}{\printgoal{#5}} &}
         }
     }
    \XSIMputright \ExerciseTableCode{%
        \XSIMifblankTF{\ExerciseType}
        {\TotalExerciseGoal{points}{}{}}
        {\TotalExerciseTypeGoal{\ExerciseType}{points}{}{}}
        \\ \midrule
        Obtenus &
     }
    \ForEachUsedExerciseByOrder{%
        \XSIMifeqT{#1}{\ExerciseTableType{#1}}
        {\XSIMputright \ExerciseTableCode{&}}
     }
    \XSIMputright \ExerciseTableCode{\\ \midrule}
    \edef \numberofcolumns{%
        \XSIMifblankTF{\ExerciseType}
         {\numberofusedexercises}
         {\csname numberof \ExerciseType s\endcsname}
     }
    \XSIMifeqF{\numberofcolumns}{0}{%
        \begin{tabular}{l*{\numberofcolumns}{c}c}
        \ExerciseTableCode
        \end{tabular}
     }
 }
% ======================================== progcalcul : début =========================================================================
\newcounter{progcalcul}
\NewDocumentEnvironment{progcalcul}{ s o }
{%begin code
  \par\noindent
  \refstepcounter{progcalcul}%
  \IfBooleanTF{#1}{\newcommand*{\counterprogcalcul}{}}{\newcommand*{\counterprogcalcul}{\no{\theprogcalcul}}}
  \begin{tcolorbox}[title={Programme \counterprogcalcul},colback=colorPrim!10!white,colframe=colorPrim!10!white,sharp corners=all,
  fontupper={\ttfamily},fonttitle={\color{black}\bfseries},colbacktitle=colorPrim!20!white,toptitle=2mm,bottomtitle=2mm,top=0pt,before skip=-10pt,after skip=10pt]
  \begin{itemize}
}
{%end code
  \end{itemize}
  \end{tcolorbox}
  \par%
  \noindent\ignorespacesafterend
}
\ExplSyntaxOn
\cs_new:cpn {progcalcul*} {\progcalcul*}
\cs_new_eq:cN {endprogcalcul*} \endprogcalcul
\ExplSyntaxOff
% ======================================== progcalcul : fin =========================================================================
